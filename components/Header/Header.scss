@use 'stylesheets/config' as *;
@use 'stylesheets/mixins' as *;

/**
 * 1. In addition when the mask is open, :root.is-transition class also disables
 *    the pointer-events during template transition to remove possible lag
 *    in route change
 * 2. Fix for Windows font rendering. This is needed because there's
 *    mix-blend mode which adds odd text rendering in Windows.
 */
.Header {
  --focus-visible-bg: var(--focus-visible-bg-blend);
  --focus-visible-fg: var(--focus-visible-fg-blend);
  --link: var(--text-50);
  user-select: none;

  // [1.]
  &.is-animate {
    pointer-events: none;
  }
}

.Header-main {
  align-items: flex-end;
  display: flex;
  height: var(--Header-height);
  inset: 0 var(--root-scrollbar-width-lock, 0) auto 0;
  min-width: var(--root-min-width);
  mix-blend-mode: difference;
  position: fixed;
  z-index: var(--z-index-900);

  // [2.]
  .is-windows & {
    font-weight: var(--font-weight-100);
  }
}

.Header-wrap {
  align-items: center;
  display: flex;
}

.Header-logo,
.Header-button-text-item {
  flex-shrink: 0;
  height: rem($space-ml);
  line-height: rem($space-ml);
  white-space: nowrap;

  @include mq(m) {
    @include fontSize($h6-font-size-min, false, $h6-font-size-max);
  }

  @include mq(ml) {
    @include fontSize($h5-font-size-min, false, $h5-font-size-max);
  }
}

.Header-logo {
  --link-hover-opacity: 1;
  display: flex;
  flex-direction: column;
  margin: 0 auto 0 0;
  overflow: hidden;
  position: relative;
  z-index: 1;

  @include mq(m) {
    margin: 0;
  }
}

.Header-logo-reveal {
  left: 0;
  position: absolute;
  top: 0;
}

.Header-separator {
  display: none;

  @include mq(m) {
    align-items: center;
    display: flex;
    flex-direction: column;
    height: rem($space-ml);
    justify-content: center;
    margin: 0 rem($space-xs);
    overflow: hidden;
    position: relative;
    width: rem($space);
    z-index: 1;
  }

  @include mq(ml) {
    margin: 0 rem($space-s);
    width: rem($space * 1.25);
  }
}

.Header-separator-line {
  background: var(--border-50);
  height: var(--border-width-l);
  position: absolute;
  width: 100%;

  @include mq('4xl') {
    --border-width-l: 3px;
  }
}

/* =======================================
 * Button
 * ======================================= */

.Header-button {
  align-items: center;
  color: var(--text-50);
  display: flex;
  gap: rem($space-s);
  margin: 0;
  z-index: 1;

  &:focus-visible {
    .Header-button-arrow {
      outline: var(--border-width) solid var(--border-50);
      outline-offset: $space-3xs;
    }
  }

  @include mq(ml) {
    gap: rem($space);
  }
}

.Header-button-textMobile {
  display: block;
  line-height: rem($space-ml);
  overflow: hidden;
  position: relative;

  @include mq(m) {
    display: none;
  }
}

.Header-button-textMobile-reveal {
  left: 0;
  position: absolute;
  top: 0;
}

.Header-button-text {
  position: relative;

  @include mq($until: m) {
    display: none;
  }
}

.Header-button-text-item {
  display: block;
  overflow: hidden;
}

.Header-button-text-item--reveal {
  bottom: 0;
  left: 0;
  position: absolute;
  width: rem($space * 20);
}

.Header-button-arrow {
  align-items: center;
  border: 0;
  border-radius: 50%;
  box-shadow: inset 0 0 0 rem($space-5xs) var(--border-50);
  color: var(--text-50);
  flex-direction: column;
  height: rem($space * 2.25);
  justify-content: center;
  overflow: hidden;
  padding: 0;
  width: rem($space * 2.25);

  .Button-icon {
    position: absolute;
    transition: var(--trans-primary-fast);
  }

  @include mq(m) {
    height: rem($space-l);
    width: rem($space-xl);
  }

  @include mq(l) {
    height: rem($space-xl);
    width: rem($space-2xl);
  }
}

.Header-button-icon--reveal {
  transform: scaleY(6) translateY(rem(-$space-xl));
}

.Header-button-icon--close {
  color: var(--text-950);
  transform: scaleY(6) translateY(rem(-$space-xl));
}

.Header-button-bg {
  background-color: var(--bg-50);
  border-radius: 50%;
  display: block;
  height: 200%;
  left: -75%;
  position: absolute;
  top: -50%;
  transform: translateY(77%);
  transition: transform var(--trans-primary-fast);
  width: 250%;
}

.Header:not(.is-open) .Header-button {
  @include hoverFocusVisible() {
    .Header-button-icon--default {
      transform: scaleY(6) translateY(rem($space-xl));
    }

    .Header-button-icon--reveal {
      transform: scaleY(1) translateY(0);
    }
  }
}

.Header.is-open {
  .Header-button-bg {
    animation: HeaderButtonBgIn var(--trans-primary-fast) both;
  }

  .Header-button-icon--default {
    animation: HeaderButtonIconOut var(--trans-primary-fast) both;
  }

  .Header-button-icon--reveal {
    display: none;
  }

  .Header-button-icon--close {
    animation: HeaderButtonIconCloseIn var(--trans-primary-fast) both;
  }
}

.Header.is-animate\:close {
  .Header-button-bg {
    animation: HeaderButtonBgOut var(--trans-primary) both;
    animation-delay: 0.6s;
  }

  .Header-button-icon--default {
    animation: HeaderButtonIconIn var(--trans-primary) both;
    animation-delay: 0.3s;
  }

  .Header-button-icon--close {
    animation: HeaderButtonIconCloseOut var(--trans-primary) both;
    animation-delay: 0.3s;
  }
}

@keyframes HeaderButtonIconIn {
  0% {
    transform: scaleY(6) translateY(rem($space-xl));
  }
  100% {
    transform: scaleY(1) translateY(0);
  }
}

@keyframes HeaderButtonIconOut {
  100% {
    transform: scaleY(6) translateY(rem($space-xl));
  }
}

@keyframes HeaderButtonIconCloseIn {
  100% {
    transform: scaleY(1) translateY(0);
  }
}

@keyframes HeaderButtonIconCloseOut {
  0% {
    transform: scaleY(1) translateY(0);
  }
  100% {
    transform: scaleY(6) translateY(rem(-$space-xl));
  }
}

@keyframes HeaderButtonBgIn {
  0% {
    transform: translateY(77%);
  }
  100% {
    transform: translateY(0%);
  }
}

@keyframes HeaderButtonBgOut {
  0% {
    transform: translateY(0%);
  }
  100% {
    transform: translateY(77%);
  }
}

/* =======================================
 * Nav
 * ======================================= */

.Header-nav {
  display: none;

  @include mq(m) {
    display: flex;
    margin-left: auto;
  }

  @include mq(ml) {
    @include text(l);
  }
}

.Header-nav-item {
  overflow: hidden;
  position: relative;

  &:not(:first-child) {
    margin-left: rem($space-s);

    @include mq(ml) {
      margin-left: rem($space-m);
    }
  }
}

.Header-nav-item-reveal {
  left: 0;
  position: absolute;
  top: 0;
}

/* =======================================
 * Mask
 * ======================================= */

.Header-mask {
  background: var(--bg-950);
  clip-path: circle(0% at 0px 0px);
  color: var(--text-50);
  display: none;
  flex-direction: column;
  gap: rem($space-l);
  inset: 0;
  min-width: var(--root-min-width);
  position: fixed;
  z-index: var(--z-index-800);

  .Header.is-open & {
    display: flex;
  }

  .Header.is-animate:not(.has-scrollbar) & {
    --scrollbar-overflow: hidden;
  }

  &:before {
    background: linear-gradient(var(--bg-950) 50%, transparent);
    content: '';
    height: calc(var(--Header-height) + #{rem($space-l)});
    inset: 0 0 auto 0;
    pointer-events: none;
    position: fixed;
    z-index: 1;
  }
}

.Header-mask-nav {
  flex: 1;
  padding-top: calc(var(--Header-height) + #{rem($space-l)});
  width: 100%;
  z-index: 0;

  @include mq(m) {
    align-items: center;
    display: grid;
  }
}

.Header-mask-nav-item {
  overflow: hidden;
  position: relative;
  transition: border-radius var(--trans-primary-fastest);
  z-index: 1;

  @include mq(m) {
    @for $i from 2 through 5 {
      &:nth-child(#{$i}) {
        .Header-mask-nav-link {
          &:before {
            flex-basis: calc((var(--wrap-space-left) + #{rem($space)}) * #{$i});
          }
        }
      }
    }
  }
}

.Header-mask-nav-marquee,
.Header-mask-nav-link {
  @include fontSize(14px, 14px, 72px, 3.5vw);
  font-weight: var(--font-weight-100);
  text-transform: uppercase;
  white-space: nowrap;
}

.Header-mask-nav-link {
  --focus-visible-bg: transparent;
  align-items: center;
  color: var(--text-50);
  display: flex;
  padding: rem($space-s) 0;

  &:before,
  &:after {
    border-top: var(--border-width-s) solid var(--border-900);
    content: '';
    transition: border-color var(--trans-primary);
  }

  &:before {
    flex-basis: calc(var(--wrap-space-left) - #{rem($space-s)});
    margin-right: rem($space-s);
  }

  &:after {
    flex: 1;
    margin-left: rem($space-s);
  }

  .Header-mask-nav-item.is-active & {
    &:before,
    &:after {
      border-color: var(--border-50);
    }
  }
}

.Header-mask-nav-link-inner {
  align-items: center;
  display: flex;
  pointer-events: none;
}

.Header-mask-nav-link-text {
  position: relative;
}

.Header-mask-nav-link-eye {
  margin: 0 rem($space-s) 0 rem($space);
  width: clamp(rem($space * 3), 10vw, rem($space * 5));

  circle {
    &:nth-child(2) {
      fill: var(--Header-mask-nav-marquee-iris, var(--bg-50));
    }
  }

  path {
    &:first-child {
      stroke: var(--border-800);
      stroke-width: 4px;
    }
  }
}

.Header-mask-nav-marquee {
  background: var(--tone-50);
  color: var(--text-950);
  inset: 0;
  overflow: hidden;
  pointer-events: none;
  position: absolute;
}

.Header-mask-nav-marquee-inner {
  height: 100%;
  width: 100%;
}

.Header-mask-nav-marquee-inner-self {
  align-items: center;
  display: flex;
  height: 100%;
  width: fit-content;
}

.Header-mask-nav-marquee-eye {
  flex-shrink: 0;
  margin: 0 rem($space-s);
  width: clamp(rem($space * 3), 10vw, rem($space * 5));

  circle {
    &:nth-child(2) {
      fill: var(--Header-mask-nav-marquee-iris, var(--bg-50));
    }
  }

  path {
    &:first-child {
      stroke-width: 4px;
    }
  }
}

.Header-mask-nav-secondary-item {
  --heading: var(--text-100);

  &:not(:last-child) {
    margin-bottom: rem($space-2xs + $space-4xs);
  }

  .Header-mask-nav-item + & {
    margin-top: rem($space-m);
  }
}

/* =======================================
 * Footer
 * ======================================= */

.Header-footer {
  --link: var(--text-100);
  --link-hover-opacity: 1;
  --link-hover: var(--text-50);
  align-items: flex-end;
  color: var(--text-100);
  display: flex;
  margin-bottom: rem($space-m);

  @include mq(m) {
    margin-bottom: rem($space-xl);
  }
}

.Header-footer-nav {
  @include mq(ml) {
    display: flex;
    gap: rem($space-xs);

    li {
      margin: 0;
    }
  }
}

.Header-footer-right {
  margin-right: var(--root-scrollbar-width-lock);

  @include mq(m) {
    align-items: flex-end;
    display: flex;
    flex-direction: column;
    gap: rem($space-m);
    margin-bottom: rem($space-5xs);
    margin-left: auto;
    text-align: right;
  }
}
